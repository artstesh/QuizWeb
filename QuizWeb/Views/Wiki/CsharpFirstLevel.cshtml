@model dynamic

@{
    ViewBag.Title = "C# Level 1";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>C# Level 1</h2>
<label onclick="ToggleVisibility('program-flow-list')">Управление программным потоком</label>
<div>
    <ol class="hidden-element" id="program-flow-list">
        <li>
        <p>Реализация многопоточности и асинхронной обработки</p>
        <p>
            <ul>
                <li>использование библиотеки Task Parallel;</li>
                <li>создание continuation tasks; создание потоков с помощью класса ThreadPool;</li>
                <li>разблокирование пользовательского интерфейса;</li>
                <li>использование ключевых слов async и await;</li>
                <li>управление данными с помощью параллельных коллекций</li>
            </ul>
        </p>
        <li>
            <p>Управление многопоточностью</p>
            <p>
                <ul>
                    <li>cинхронизация ресурсов;</li>
                    <li>реализация блокировки;</li>
                    <li>отмена долгосрочных задач;</li>
                    <li>реализация поточно-ориентированных методов для обработки состояний гонки</li>
                </ul>

            </p>
        </li>
        <li>
            <p>Внедрение программного потока</p>
            <p>
                <ul>
                    <li>итерация по коллекции и элементам массива;</li>
                    <li>программирование решений с использованием инструкций, условий if/then и операторов;</li>
                    <li>оценка выражений</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Создание и реализация событий и обратных вызовов</p>
            <p>
                <ul>
                    <li>cоздание обработчиков событий;</li>
                    <li>подписка и отмена подписки на события;</li>
                    <li>использование встроенных типов делегатов для создания событий;</li>
                    <li>создание делегатов;</li>
                    <li>лямбда-выражения;</li>
                    <li>анонимные методы;</li>
                </ul>

            </p>
        </li>
        <li>
            <p>Реализация обработки исключений</p>
            <p>
                <ul>
                    <li>Обработка типов исключений;</li>
                    <li>использование операторов перехвата;</li>
                    <li>использование базового класса исключений;</li>
                    <li>реализация блоков try-catch-finally;</li>
                    <li>вызов исключений;</li>
                    <li>повторный или обычный вызов;</li>
                    <li>создание пользовательских исключений;</li>
                    <li>обработка внутренних исключений;</li>
                    <li>обработка общего исключения;</li>
                </ul>
            </p>
        </li>
    </ol>
</div>

<label onclick="ToggleVisibility('types-list')">Создание и использование типов</label>
<div>
    <ol class="hidden-element" id="types-list">
        <li>
            <p>Создание типов</p>
            <p>
                <ul>
                    <li>cоздание типов, включая structs и enum;</li>
                    <li>создание ссылочных типов, общих типов, конструкторов, статических переменных, методов, классов, методов расширения;</li>
                    <li>создание дополнительных и именованных параметров;</li>
                    <li>создание индексированных свойств;</li>
                    <li>создание перегруженных и переопределенных методов;</li>
                </ul>

            </p>
        </li>
        <li>
            <p>Использование типов</p>
            <p>
                <ul>
                    <li>упаковка и распаковка для преобразования типов значений;</li>
                    <li>типы приведения;</li>
                    <li>типы преобразования;</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Принудительное использование инкапсуляции</p>
            <p>
                <ul>
                    <li>принудительное использование инкапсуляции при помощи свойств;</li>
                    <li>принудительное использование инкапсуляции при помощи методов доступа;</li>
                    <li>принудительное использование инкапсуляции при помощи явной реализации интерфейса;</li>
                </ul>

            </p>
        </li>
        <li>
            <p>Создание и реализация иерархии классов</p>
            <p>
                <ul>
                    <li>Разработка и реализация интерфейса;</li>
                    <li>наследование от базового класса;</li>
                    <li>создание и реализация классов на основе интерфейсов IComparable, IEnumerable, IDisposable и IUnknown</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Поиск, выполнение и создание типов в среде выполнения с использованием reflection</p>
            <p>
                <ul>
                    <li>Создание и применение атрибутов;</li>
                    <li>чтение атрибутов;</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Управление жизненным циклом объекта</p>
            <p>
                <ul>
                    <li>управление неуправляемыми ресурсами;</li>
                    <li>реализация интерфейса IDisposable;</li>
                    <li>управление интерфейсом IDisposable с помощью оператора Using;</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Работа со строками</p>
            <p>
                <ul>
                    <li>Работа со строками с помощью классов StringBuilder, StringWriter и StringReader;</li>
                    <li>поиск строк;</li>
                    <li>методы перечисления строк;</li>
                    <li>форматирование строк;</li>
                    <li>использование строковой интерполяции</li>
                </ul>
            </p>
        </li>
    </ol>
</div>

<label onclick="ToggleVisibility('debug-list')">Отладка приложений и реализация функций безопасности</label>
<div>
    <ol class="hidden-element" id="debug-list">
        <li>
            <p>Проверка входных данных в приложении</p>
            <p>
                <ul>
                    <li>проверка данных JSON;</li>
                    <li>выбор подходящего типа коллекций данных;</li>
                    <li>управление целостностью данных; </li>
                    <li>оценка регулярного выражения для проверки формата входных данных;</li>
                    <li>использование встроенных функций для проверки типов данных и содержимого;</li>
                </ul>
            </p>
        </li>
    </ol>
</div>

<label onclick="ToggleVisibility('data-list')">Рализация доступа к данным</label>
<div>
    <ol class="hidden-element" id="data-list">
        <li>
            <p>Выполнение операций ввода/вывода</p>
            <p>
                <ul>
                    <li>чтение и запись файлов и потоков;</li>
                    <li>чтение и запись из сети с использованием классов пространства имен System.Net;</li>
                    <li>реализация асинхронных операций ввода/вывода;</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Использование данных</p>
            <p>
                <ul>
                    <li>Извлечение данных из базы данных;</li>
                    <li>обновление данных в базе данных;</li>
                    <li>использование данных JSON и XML;</li>
                    <li>извлечение данных с помощью веб-служб</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Запросы и работа с данными и объектами с помощью LINQ</p>
            <p>
                <ul>
                    <li>Запрос данных с помощью операторов;</li>
                    <li>создание запросов LINQ на основе методов;</li>
                    <li>запрос данных с помощью команд представления запросов;</li>
                    <li>чтение, фильтрация, создание и изменение структур данных с помощью LINQ для XML</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Сериализация и десериализация данных</p>
            <p>
                <ul>
                    Сериализация и десериализация данных с помощью:
                    <li>двоичной сериализации</li>
                    <li>пользовательской сериализации</li>
                    <li>сериализатора XML</li>
                    <li>сериализатора JSON</li>
                    <li>сериализатора контрактов данных</li>
                </ul>
            </p>
        </li>
        <li>
            <p>Хранение данных в коллекциях и извлечение данных из коллекций</p>
            <p>
                <ul>
                    <li>Хранение и извлечение данных с помощью словарей, массивов, списков, наборов и запросов;</li>
                    <li>выбор типа коллекции;</li>
                    <li>инициализация коллекции; добавление и удаление элементов коллекции;</li>
                    <li>использование коллекций различных типов и коллекций без типа;</li>
                    <li>реализация пользовательских коллекций;</li>
                    <li>реализация интерфейсов коллекций</li>
                </ul>
            </p>
        </li>
    </ol>
</div>